name: Repository mirroring

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:

  linter_code:
    name: Linter code
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged != true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install clang-format
        run: sudo apt-get install -y clang-format
      - name: Linter code
        run: |
          echo "JE SUIS UN LINTER"
          echo "origin: ${{ github.head_ref }}"
      - name: Run clang-format
        run: find network -name '*.cpp' | xargs clang-format -i
      - name: add ssh key
        run: |
          echo "${{ secrets.CLONE_KEY }}" >> ~/.ssh_key
          chmod 0600 ~/.ssh_key
          eval $(ssh-agent)
          ssh-add ~/.ssh_key

      - name: Push changes
        run:
          git diff --exit-code || git config --global user.email "github-actions[bot]@users.noreply.github.com" && git config --global user.name "github-actions[bot]" && git add . && git commit -m "[BOT] (Linter) Format the code" && git push origin HEAD:${{ github.head_ref }}


  check_program_compilation_linux:
    needs: [linter_code]
    container:
      image: epitechcontent/epitest-docker:latest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure and build with CMake
        run: |
          cmake -B build
          cmake --build build

  check_program_compilation_windows:
    needs: [check_program_compilation_linux]
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install CMake
        run: |
          choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          
      - name: Configure and build with CMake
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .

  push_to_mirror:
    needs: [check_program_compilation_windows]
    name: Push repository to mirror
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true || github.event_name == 'push'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Repository mirroring
        uses: pixta-dev/repository-mirroring-action@v1
        with:
          target_repo_url: ${{ secrets.MIRROR_URL }}
          ssh_private_key: ${{ secrets.CLONE_KEY }}