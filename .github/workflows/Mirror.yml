name: Repository mirroring

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    tags:
        - '**'

jobs:

  linter_code:
    name: Linter code
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged != true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install clang-format
        run: sudo apt-get install -y clang-format
      - name: Linter code
        run: |
          echo "JE SUIS UN LINTER"
          echo "origin: ${{ github.ref }}"
      - name: Run formmater.sh
        run: |
          chmod +x ./formatter.sh
          ./formatter.sh

      - name: Check if code is formatted
        shell: bash
        run: |
          git diff --exit-code
          Status=$?

          if [ $Status -eq 0 ]; then
            echo "Code is formatted"
          else
            echo "Code is not formatted"
            exit 1
          fi

  # check_program_compilation_linux:
  #   needs: [linter_code]
  #   container:
  #     image: epitechcontent/epitest-docker:latest
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Configure and build with CMake
  #       run: |
  #         cmake -B build
  #         cmake --build build

  # check_program_compilation_windows:
  #   needs: [linter_code]
  #   runs-on: windows-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Install CMake
  #       run: |
  #         choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          
  #     - name: Configure and build with CMake
  #       run: |
  #         mkdir build
  #         cd build
  #         cmake ..
  #         cmake --build .
  
  create_release:
    # needs: [check_program_compilation_linux, check_program_compilation_windows]
    name: Create release
    runs-on: ubuntu-latest
    # if: github.event.pull_request.merged == true || github.event_name == 'push'
    permissions:
      contents: write
    env:
      CURRENT_DATE: $(date +'%Y%m%d')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d.%Hh%Mm%Ss')" >> $GITHUB_ENV
      - name: Display current date
        run: echo $CURRENT_DATE
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Latest.Version.${{ env.CURRENT_DATE }}
          release_name: Version ${{ github.head_ref }}
          draft: false
          prerelease: false

  # push_to_mirror:
  #   needs: [create_release]
  #   name: Push repository to mirror
  #   runs-on: ubuntu-latest
  #   if: github.event.pull_request.merged == true || github.event_name == 'push'
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0
  #     - name: Repository mirroring
  #       uses: pixta-dev/repository-mirroring-action@v1
  #       with:
  #         target_repo_url: ${{ secrets.MIRROR_URL }}
  #         ssh_private_key: ${{ secrets.CLONE_KEY }}